name: Auto Build Docker Images

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**/Dockerfile'  # Триггерим только при изменении Docker-файлов

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  discover_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find valid Docker projects
        id: find-projects
        run: |
          # Находим папки с Dockerfile, исключая пустые имена
          mapfile -t DIRS < <(find . -mindepth 2 -type f -name Dockerfile -exec dirname {} \; | sed 's|^\./||' | grep -v '^$')
          
          # Проверяем, что найдены проекты
          if [ ${#DIRS[@]} -eq 0 ]; then
            echo "No Docker projects found!"
            exit 1
          fi
          
          # Формируем JSON с валидацией
          MATRIX_JSON=$(jq -n --argjson dirs "$(printf '%s\n' "${DIRS[@]}" | jq -R . | jq -s .)" '
            $dirs | map(select(length > 0)) | 
            {include: map({project_path: . | sub("^/"; "") | sub("/+$"; "")})}
          ')
          
          echo "matrix=${MATRIX_JSON}" >> $GITHUB_OUTPUT
          echo "Valid projects found:"
          echo "$MATRIX_JSON" | jq .

      - name: Validate matrix
        run: |
          if [ -z "${{ toJson(matrix) }}" ]; then
            echo "::error::No valid Docker projects detected"
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ matrix.project_path }}/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ format('{0}', matrix.project_path | replace('/', '-') | trim) }}:latest
          labels: ghcr.io/${{ github.repository_owner }}/${{ format('{0}', matrix.project_path | replace('/', '-') | regex_replace('[^a-zA-Z0-9-]', '-') | trim) }}:latest