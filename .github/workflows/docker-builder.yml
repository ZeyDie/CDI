name: Auto Build Docker Images

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**/Dockerfile'

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  discover_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find valid Docker projects
        id: find-projects
        run: |
          # Находим папки с Dockerfile, исключая пустые имена
          mapfile -t DIRS < <(find . -mindepth 2 -type f -name Dockerfile -exec dirname {} \; | sed 's|^\./||' | grep -v '^$')
          
          # Проверяем, что найдены проекты
          if [ ${#DIRS[@]} -eq 0 ]; then
            echo "::error::No Docker projects found!"
            exit 1
          fi
          
          # Формируем JSON
          JSON_ENTRIES=()
          for dir in "${DIRS[@]}"; do
            # Очищаем путь и формируем image_name заменой '/'
            IMAGE_NAME=$(echo "$dir" | tr '/' '-')
            
            JSON_ENTRIES+=("{\"project_path\":\"$dir\", \"image_name\": \"$IMAGE_NAME\"}")
          done
          
          # Формируем итоговую матрицу
          MATRIX_JSON=$(printf '%s\n' "${JSON_ENTRIES[@]}" | jq -s '.')
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
          echo "Valid projects found:"
          echo "$MATRIX_JSON" | jq .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ matrix.project_path }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image_name }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image_name }}:${{ github.sha }}