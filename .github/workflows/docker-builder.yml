name: Auto Build Docker Images

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**/Dockerfile'

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  discover_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find and validate Docker projects
        id: find-projects
        run: |
          # Найти все Dockerfile (игнорируя корневой)
          mapfile -t DOCKER_PATHS < <(find . -mindepth 2 -type f -name Dockerfile)
          
          # Проверить наличие проектов
          if [ ${#DOCKER_PATHS[@]} -eq 0 ]; then
            echo "::error::No Docker projects found!"
            exit 1
          fi
          
          # Подготовить JSON-матрицу
          JSON_ARRAY=()
          for path in "${DOCKER_PATHS[@]}"; do
            dir=$(dirname "$path" | sed 's|^\./||')
            image_name=$(echo "$dir" | tr '/' '-' | tr -cd 'a-zA-Z0-9-' | sed 's/^-*//;s/-*$//;s/--*/-/g')
            
            if [ -z "$image_name" ]; then
              echo "::warning::Skipping invalid path: $dir"
              continue
            fi
            
            JSON_ARRAY+=("{\"project_path\":\"$dir\",\"image_name\":\"$image_name\"}")
          done
          
          if [ ${#JSON_ARRAY[@]} -eq 0 ]; then
            echo "::error::No valid Docker projects after filtering!"
            exit 1
          fi
          
          MATRIX_JSON=$(echo "${JSON_ARRAY[@]}" | jq -s '{include: .}')
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
          echo "Valid projects:"
          echo "$MATRIX_JSON" | jq .

      - name: Validate matrix
        run: |
          if [ -z "${{ toJson(matrix) }}" ]; then
            echo "::error::Matrix is empty after filtering"
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ matrix.project_path }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image_name }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image_name }}:${{ github.sha }}