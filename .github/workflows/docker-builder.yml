name: Docker Image Builder

on:
  workflow_dispatch:
  push:
    branches: [ '*' ]
    paths: [ '**/Dockerfile' ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Find all Dockerfiles
        id: find-dockerfiles
        run: |
          # Находим все Dockerfile (игнорируя корневой)
          mapfile -t DOCKER_PATHS < <(find . -mindepth 2 -type f -name Dockerfile -print0 | xargs -0 realpath --relative-to=. | grep -v '^$')
          
          # Проверяем наличие
          if [ ${#DOCKER_PATHS[@]} -eq 0 ]; then
            echo "::error::No Dockerfiles found!"
            exit 1
          fi
          
          # Формируем JSON вручную
          JSON_ENTRIES=()
          for path in "${DOCKER_PATHS[@]}"; do
            folder=$(dirname "$path")
            image_name=$(echo "$folder" | tr '/' '-' | tr -cd 'a-zA-Z0-9-' | sed 's/^-*//;s/-*$//;s/--*/-/g')
            JSON_ENTRIES+=("{\"folder\":\"$folder\",\"image_name\":\"$image_name\"}")
          done
          
          MATRIX_JSON="{\"include\":[$(IFS=,; echo "${JSON_ENTRIES[*]}")]}"
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
          echo "Found Dockerfiles:"
          echo "$MATRIX_JSON" | jq .

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.folder }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.include.image_name }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ matrix.include.image_name }}:${{ github.sha }}